name: CD

on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed
  workflow_dispatch:
    inputs:
      ci_run_id:
        description: 'Run ID of the CI workflow to pull artifacts from'
        required: false
        default: ''

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Determine Run ID
        id: determine-run-id
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" && "${{ inputs.ci_run_id }}" != "" ]]; then
            echo "Using provided run-id: ${{ inputs.ci_run_id }}"
            echo "::set-output name=run_id::${{ inputs.ci_run_id }}"
          else
            echo "Using workflow_run event's run-id: ${{ github.event.workflow_run.id }}"
            echo "::set-output name=run_id::${{ github.event.workflow_run.id }}"
        shell: bash

      - name: Download Hosting Artifact
        uses: actions/download-artifact@v4
        with:
          name: static
          run-id: ${{ steps.determine-run-id.outputs.run_id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Hosting Files
        run: unzip -o payload.zip -d .

      - name: Download Functions Artifact
        uses: actions/download-artifact@v4
        with:
          name: functions
          path: functions
          run-id: ${{ steps.determine-run-id.outputs.run_id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Functions Files
        run: unzip -o functions/payload.zip -d functions

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Functions Dependencies
        run: npm --prefix functions install

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Deploy to Firebase
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: |
          firebase deploy --project milo-ml --message "Release: ${{ github.run_number }}"
